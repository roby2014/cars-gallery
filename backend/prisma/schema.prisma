// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"

  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"

  previewFeatures = ["selectRelationCount", "orderByRelation"]
}

model Post {

  id        Int      @default(autoincrement()) @id

  createdAt DateTime @default(now())

  updatedAt DateTime @updatedAt

  title     String   @db.VarChar(255)

  content   String?

  likes     PostLike[]

  published Boolean  @default(false)

  author    User     @relation(fields: [authorId], references: [id])

  authorId  Int

  file      PostFile? @relation(fields: [fileId], references: [id])

  fileId    Int?

  tags Tag[]
  
  comments Comment[]
}

model PostLike {
  id        Int      @default(autoincrement()) @id

  user      User     @relation(fields: [userId], references: [id])

  userId    Int

  post      Post     @relation(fields: [postId], references: [id])

  postId    Int
}

model PostFile {
  id        Int      @default(autoincrement()) @id

  file      Bytes    @db.LongBlob

  fileType  String?

  post      Post?
}

model Comment {

  id        Int      @default(autoincrement()) @id

  author    User     @relation(fields: [authorId], references: [id])

  authorId  Int

  postId    Int

  post      Post     @relation(fields: [postId], references: [id])

  content   String 

  createdAt DateTime @default(now())

  updatedAt DateTime @updatedAt
}

model Profile {

  id     Int     @default(autoincrement()) @id

  photo  Bytes?  @db.LongBlob

  user   User    @relation(fields: [userId], references: [id])

  userId Int     @unique
}


model User {

  id       Int      @default(autoincrement()) @id

  email    String   @unique

  password String  

  name     String

  username String   @unique

  birthday DateTime

  country  String?

  bio      String?

  posts    Post[]

  postsCommented Comment[]

  postsLiked  PostLike[]

  profile     Profile?

  followedBy  User[]   @relation("UserFollows", references: [id])

  following   User[]   @relation("UserFollows", references: [id])

  createdAt   DateTime @default(now())

  updatedAt   DateTime @updatedAt

}

model Tag {
  id Int @default(autoincrement()) @id
  
  name String @unique

  posts Post[]
}
